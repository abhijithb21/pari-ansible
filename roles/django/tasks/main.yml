---
- name: Create the virtualenv
  command: virtualenv --distribute {{ base_path }}/pari_env
  tags: install

- name: Clone the source from github
  git: clone=yes accept_hostkey=yes repo={{ git_repo }} dest={{ base_path }}/pari
  tags: install

- name: Pull the latest code
  git: repo={{ git_repo }} update=yes dest={{ base_path }}/pari
  tags: deploy

- name: Copy the local.py file
  template: src=local.py dest={{ base_path }}/pari/pari/settings/local.py
  ignore_errors: true
  tags:
    - install
    - deploy

- name: Install dependencies from requirements.txt
  pip: requirements={{ requirements_file }} virtualenv={{ base_path }}/pari_env
  tags:
    - install
    - deploy

- name: manage.py migrate
  django_manage: >
    command=migrate
    virtualenv={{ base_path }}/pari_env
    app_path={{ base_path }}/pari
    settings={{ settings_path }}
  tags:
    - install
    - deploy

- name: Install global dependencies into the virtualenv
  pip: virtualenv={{ base_path }}/pari_env name={{ item }}
  with_items:
    - gunicorn
    - ipython
    - hiredis
    - redis
  tags:
    - install

- name: Copy the supervisor.conf
  template: src=supervisord.conf dest=/etc/supervisor/conf.d/pari.conf
  sudo: true
  tags: install

- name: Copy the gunicorn_conf.py to the project
  template: src=gunicorn_conf.py dest={{ base_path }}/pari/gunicorn_conf.py
  tags: install

# [Temporary start] tasks for building static for wagtail static
- name: Symlink to correct nodejs
  command: ln -sf /usr/bin/nodejs /usr/bin/node
  sudo: true
  tags: install

- name: Build the static files
  shell: npm install && npm run build
  args:
    chdir: "{{ base_path }}/pari_env/src/wagtail"
  tags:
    - install
    - deploy
# [Temporary end]

- name: Copy the crontab
  template: src=crontab dest=/etc/cron.d/ubuntu
  sudo: true
  tags:
    - install
    - deploy

- name: Collectstatic
  django_manage: >
    command="collectstatic --noinput"
    virtualenv={{ base_path }}/pari_env
    app_path={{ base_path }}/pari
    settings={{ settings_path }}
  tags:
    - install
    - deploy

- name: Compress media
  django_manage: >
    command="compress"
    virtualenv={{ base_path }}/pari_env
    app_path={{ base_path }}/pari
    settings={{ settings_path }}
  tags:
    - install
    - deploy
  ignore_errors: true

- name: Update search index
  django_manage: >
    command="update_index"
    virtualenv={{ base_path }}/pari_env
    app_path={{ base_path }}/pari
    settings={{ settings_path }}
  tags:
    - install
    - deploy
  ignore_errors: true

- name: Clear cache
  redis: command=flush flush_mode=all
  tags:
    - install
    - deploy
  ignore_errors: true

- name: Restart supervisord
  service: name=supervisor state=restarted
  sudo: true
  tags: install

- name: Restart gunicorn through supervisor
  supervisorctl: name={{ proj_name }}:gunicorn_{{ proj_name }} state=restarted
  sudo: true
  tags:
    - install
    - deploy
