upstream pari {
    server 127.0.0.1:8000;
}

server {
    return 404;
}

server {
    listen 80;
    server_name {{ domain }} www.{{ domain }};
    return 301 https://{{ domain }}$request_uri;
}

server {
    listen 80;
    listen 443 ssl;
    server_name www.{{ domain }};

    rewrite ^ $scheme://{{ domain }}$request_uri permanent;
}

server {
    listen 80;
    listen 443 default ssl;

    server_name {{ domain }};
    client_max_body_size 10M;
    keepalive_timeout    70;

    ssl_certificate         server.crt;
    ssl_certificate_key     server.key;
    ssl_session_cache       shared:SSL:10m;
    ssl_session_timeout     10m;
    ssl_stapling            on;
    ssl_stapling_verify     on;
    ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA !RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS";

    if ($host !~* ^({{ domain }}|www.{{ domain }})$) {
        return 444;
     }

    location / {
        proxy_redirect      off;
        proxy_set_header    Host                    $host;
        proxy_set_header    X-Real-IP               $remote_addr;
        proxy_set_header    X-Forwarded-For         $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Protocol    $scheme;
        proxy_pass          http://pari;
    }

    location /static {
        root            {{ base_path }}/pari;
        access_log      off;
        log_not_found   off;
	gzip_static on;
	expires 1d;
    }

    location /media {
        root            {{ base_path }}/pari;
        access_log      off;
        log_not_found   off;
	gzip_static on;
	expires 1d;
    }

    location /robots.txt {
        root            {{ base_path }}/pari/static;
        access_log      off;
        log_not_found   off;
	expires 1d;
    }

    location /favicon.ico {
        root            {{ base_path }}/pari/static;
        access_log      off;
        log_not_found   off;
	expires 1d;
    }
}
