---
- name: Ensure apt is up to date
  apt: update_cache=yes
  become: true
  become_method: sudo
  tags: install

- name: Ensure packages are upgraded
  apt: upgrade=full
  become: true
  become_method: sudo
  tags: install

- name: Ensure the following packages are installed
  apt: name={{ item }}
  with_items:
    - python-dev
    - python-pip
    - python-virtualenv
    - libjpeg-dev
    - libfreetype6-dev
    - libtiff5-dev
    - zlib1g-dev
    - git
    - libxml2-dev
    - libxslt-dev
    - libyaml-dev
    - supervisor
    - openjdk-7-jre-headless
    - redis-server
    - gettext
  become: true
  become_method: sudo
  tags: install

- name: Install redis python library
  pip: name=redis
  become: true
  become_method: sudo
  tags: install

- name: Check if node.js exists
  shell: test "$(node -v 2> /dev/null)" = v{{ node_version}}
  register: nodejs_installed
  ignore_errors: True


- name: Install node js
  include: node.yml
  when : nodejs_installed|failed
  tags: install

- name: Install lessc
  npm: name=less global=yes
  become: true
  become_method: sudo

- name: Configure ufw rules
  ufw: rule={{ item.rule }} port={{ item.port }} proto={{ item.proto }}
  with_items:
    - { rule: 'allow', port: '22', proto: 'tcp' }
    - { rule: 'allow', port: '80', proto: 'tcp' }
    - { rule: 'allow', port: '443', proto: 'tcp' }
  become: true
  become_method: sudo
  tags: install

- name: Allow OpenSSH
  ufw: rule=allow name=OpenSSH
  become: true
  become_method: sudo
  tags: install

- name: Deny incoming
  ufw: policy=deny direction=incoming
  become: true
  become_method: sudo
  tags: install

- name: Allow outgoing
  ufw: policy=allow direction=outgoing
  become: true
  become_method: sudo
  tags: install

- name: Enable ufw logging
  ufw: logging=low
  become: true
  become_method: sudo
  tags: install

- name: Enable ufw
  ufw: state=enabled
  become: true
  become_method: sudo
  tags: install

- name: Disallow root SSH access
  action: lineinfile dest=/etc/ssh/sshd_config regexp="^PermitRootLogin" line="PermitRootLogin no" state=present
  become: true
  become_method: sudo
  tags: install
  when: enable_secure_access

- name: Disallow password authentication
  action: lineinfile dest=/etc/ssh/sshd_config regexp="^PasswordAuthentication" line="PasswordAuthentication no" state=present
  become: true
  become_method: sudo
  tags: install
  when: enable_secure_access
  notify:
    - Restart ssh
